{"version":3,"sources":["helpers/format-date.ts","helpers/format-type.ts","components/pokemon-card.tsx","models/mock-pokemon.ts","services/pokemon-service.ts","components/pokemon-search.tsx","pages/pokemon-list.tsx","components/loader.tsx","pages/pokemon-detail.tsx","components/pokemon-form.tsx","pages/pokemon-edit.tsx","pages/page-not-found.tsx","models/pokemon.ts","pages/pokemon-add.tsx","services/authentication-service.ts","pages/login.tsx","PrivateRoute.tsx","App.tsx","index.tsx"],"names":["formatDate","date","arguments","length","undefined","Date","concat","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","_ref","pokemon","_ref$borderColor","borderColor","_useState","useState","_useState2","_slicedToArray","setColor","history","useHistory","React","createElement","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","created","types","map","key","POKEMONS","hp","cp","PokemonService","_classCallCheck","_createClass","value","_this","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","_this2","data","isEmpty","find","_this3","method","body","JSON","stringify","headers","index","findIndex","_this4","filter","_this5","term","_this6","includes","Object","keys","console","process","PokemonSearch","setTerm","_useState3","_useState4","setPokemons","placeholder","onChange","e","target","searchPokemon","handleInputChange","Link","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","PokemonsDetail","match","setPokemon","getPokemon","params","width","margin","PokemonForm","isEditForm","isValid","form","setForm","hasType","fieldName","fieldValue","newField","_defineProperty","_objectSpread","isTypesValid","handleSubmit","preventDefault","newForm","isAddForm","startsWith","endsWith","test","validateForm","updatePokemon","addPokemon","onSubmit","deletePokemon","htmlFor","marginBottom","checked","disabled","currentType","selectType","PokemonEdit","PageNotFound","Pokemon","PokemonAdd","getTime","AuthenticationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","login","PrivateRoute","Component","component","rest","_objectWithoutProperties","_excluded","Route","assign","render","props","Redirect","pathname","App","Router","Switch","exact","path","PokemonsList","ReactDOM","document","getElementById"],"mappings":"yPAIeA,G,MAJI,WAAsC,IAArCC,EAAUC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAIG,KACjC,MAAM,GAANC,OAAUL,EAAKM,UAAS,KAAAD,OAAIL,EAAKO,WAAW,EAAC,KAAAF,OAAIL,EAAKQ,iBC2C3CC,EA5CI,SAACC,GAChB,IAAIC,EAEJ,OAAQD,GACN,IAAK,MACHC,EAAQ,gBACR,MACF,IAAK,MACHA,EAAQ,iBACR,MACF,IAAK,SACHA,EAAQ,kBACR,MACF,IAAK,UACHA,EAAQ,kBACR,MACF,IAAK,SACHA,EAAQ,iBACR,MACF,IAAK,MACHA,EAAQ,iBACR,MACF,IAAK,SACHA,EAAQ,uBACR,MACF,IAAK,SACHA,EAAQ,iBACR,MACF,IAAK,MACHA,EAAQ,uBACR,MACF,IAAK,WACHA,EAAQ,gBACR,MACF,IAAK,SACHA,EAAQ,cACR,MACF,QACEA,EAAQ,OAIZ,MAAM,QAANN,OAAeM,ICOJC,EArC+B,SAAHC,GAA4C,IAAvCC,EAAOD,EAAPC,QAAOC,EAAAF,EAAEG,mBAAW,IAAAD,EAAG,UAASA,EAE5EE,EAA0BC,qBAAkBC,EAAAC,YAAAH,EAAA,GAArCN,EAAKQ,EAAA,GAAEE,EAAQF,EAAA,GAChBG,EAAUC,cAchB,OACIC,IAAAC,cAAA,OAAKC,UAAU,YAAYC,QAAS,kBALnBC,EAKqCd,EAAQc,QAJ9DN,EAAQO,KAAK,aAADxB,OAAcuB,IADV,IAACA,GAKkDE,aAbpD,WACfT,EAASL,IAYoFe,aAT9E,WACfV,EAAS,aASTG,IAAAC,cAAA,OAAKC,UAAU,kBAAkBM,MAAO,CAAEhB,YAAaL,IACnDa,IAAAC,cAAA,OAAKC,UAAU,cACfF,IAAAC,cAAA,OAAKQ,IAAKnB,EAAQoB,QAASC,IAAKrB,EAAQsB,QAExCZ,IAAAC,cAAA,OAAKC,UAAU,gBACfF,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,SAAIX,EAAQsB,MACZZ,IAAAC,cAAA,SAAGD,IAAAC,cAAA,aAAQ1B,EAAYe,EAAQuB,WAC9BvB,EAAQwB,MAAMC,KAAI,SAAA7B,GAAI,OACnBc,IAAAC,cAAA,QAAMe,IAAK9B,EAAMgB,UAAWjB,EAAYC,IAAQA,W,gBCyErD+B,EA/GoB,CAClC,CACCb,GAAI,EACJQ,KAAM,aACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,SAAU,UAClBD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,EACJQ,KAAM,eACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,OACRD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,EACJQ,KAAM,WACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,OACRD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,EACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UAAW,UACnBD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,EACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,SAAU,OAClBD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,EACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UACRD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,EACJQ,KAAM,WACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,SAAU,OAClBD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,EACJQ,KAAM,MACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UACRD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,EACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,YACRD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,GACJQ,KAAM,YACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UACRD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,GACJQ,KAAM,gBACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,UACRD,QAAS,IAAIjC,MAEd,CACCwB,GAAI,GACJQ,KAAM,UACNM,GAAI,GACJC,GAAI,EACJT,QAAS,oEACTI,MAAO,CAAC,OACRD,QAAS,IAAIjC,OC1GMwC,EAAc,oBAAAA,IAAAC,YAAA,KAAAD,GA2GhC,OA3GgCE,YAAAF,EAAA,OAAAJ,IAAA,cAAAO,MAMjC,WAA0C,IAADC,EAAA,KACvC,OAAGC,KAAKC,MACCC,MAAM,kCACZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAIR,EAAKS,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GACjBA,EAAQX,EAAKY,eAEhB,CAAApB,IAAA,aAAAO,MAED,SAAkBnB,GAAsC,IAADiC,EAAA,KACrD,OAAIZ,KAAKC,MACAC,MAAM,kCAAD9C,OAAmCuB,IAC5CwB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAU,GAAI,OAAKD,EAAKE,QAAQD,GAAQ,KAAOA,KAC1CP,OAAM,SAAAC,GAAK,OAAIK,EAAKJ,YAAYD,MAG9B,IAAIE,SAAQ,SAAAC,GAEjBA,EADgBE,EAAKD,SAASI,MAAK,SAAAlD,GAAO,OAAIc,IAAOd,EAAQc,OAC1C,WAEtB,CAAAY,IAAA,gBAAAO,MAED,SAAqBjC,GAAqC,IAADmD,EAAA,KACvD,OAAGhB,KAAKC,MACCC,MAAM,kCAAD9C,OAAmCS,EAAQc,IAAM,CAC3DsC,OAAQ,MACRC,KAAMC,KAAKC,UAAUvD,GACrBwD,QAAS,CAAE,eAAgB,sBAE5BlB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAIS,EAAKR,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GACjB,IAAQ/B,EAAOd,EAAPc,GACF2C,EAAQN,EAAKL,SAASY,WAAU,SAAA1D,GAAO,OAAIA,EAAQc,KAAOA,KAChEqC,EAAKL,SAASW,GAASzD,EACvB6C,EAAQ7C,QAEX,CAAA0B,IAAA,gBAAAO,MAED,SAAqBjC,GAAgC,IAAD2D,EAAA,KAClD,OAAGxB,KAAKC,MACCC,MAAM,kCAAD9C,OAAmCS,EAAQc,IAAM,CAC3DsC,OAAQ,SACRI,QAAS,CAAE,eAAgB,sBAE5BlB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAIiB,EAAKhB,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GACjB,IAAQ/B,EAAOd,EAAPc,GACR6C,EAAKb,SAAWa,EAAKb,SAASc,QAAO,SAAA5D,GAAO,OAAIA,EAAQc,KAAOA,KAC/D+B,EAAQ,SAEX,CAAAnB,IAAA,aAAAO,MAED,SAAkBjC,GAAqC,IAAD6D,EAAA,KAGpD,OAFA7D,EAAQuB,QAAU,IAAIjC,KAAKU,EAAQuB,SAEhCY,KAAKC,MACCC,MAAM,iCAAkC,CAC7Ce,OAAQ,OACRC,KAAMC,KAAKC,UAAUvD,GACrBwD,QAAS,CAAE,eAAgB,sBAE5BlB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAImB,EAAKlB,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GACjBgB,EAAKf,SAAS/B,KAAKf,GACnB6C,EAAQ7C,QAEX,CAAA0B,IAAA,gBAAAO,MAED,SAAqB6B,GAAmC,IAADC,EAAA,KACrD,OAAG5B,KAAKC,MACCC,MAAM,oCAAD9C,OAAqCuE,IAChDxB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BC,OAAM,SAAAC,GAAK,OAAIqB,EAAKpB,YAAYD,MAG5B,IAAIE,SAAQ,SAAAC,GAEjBA,EADgBkB,EAAKjB,SAASc,QAAO,SAAA5D,GAAO,OAAIA,EAAQsB,KAAK0C,SAASF,YAIzE,CAAApC,IAAA,UAAAO,MAED,SAAee,GACb,OAAoC,IAA7BiB,OAAOC,KAAKlB,GAAM5D,SAC1B,CAAAsC,IAAA,cAAAO,MAED,SAAmBS,GACjByB,QAAQzB,MAAMA,OACfZ,EA3GgC,GAAdA,EAEZgB,SAAqBnB,EAFTG,EAIZM,OAAkCgC,ECF3C,IAuCeC,EAvC0B,WAEvC,IAAAlE,EAAwBC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAArC2D,EAAIzD,EAAA,GAAEiE,EAAOjE,EAAA,GACpBkE,EAAgCnE,mBAAoB,IAAGoE,EAAAlE,YAAAiE,EAAA,GAAhDzB,EAAQ0B,EAAA,GAAEC,EAAWD,EAAA,GAc5B,OACE9D,IAAAC,cAAA,OAAKC,UAAU,OACfF,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,OAAKC,UAAU,QACfF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,eACfF,IAAAC,cAAA,SAAOf,KAAK,OAAO8E,YAAY,2BAAwBzC,MAAO6B,EAAMa,SAAU,SAAAC,GAAC,OAlB3D,SAACA,GACzB,IAAMd,EAAOc,EAAEC,OAAO5C,MACtBqC,EAAQR,GAELA,EAAK1E,QAAU,EAChBqF,EAAY,IAId3C,EAAegD,cAAchB,GAAMxB,MAAK,SAAAQ,GAAQ,OAAI2B,EAAY3B,MASuBiC,CAAkBH,OAErGlE,IAAAC,cAAA,OAAKC,UAAU,cACdkC,EAASrB,KAAI,SAACzB,GAAO,OACpBU,IAAAC,cAACqE,IAAI,CAACtD,IAAK1B,EAAQc,GAAImE,GAAE,aAAA1F,OAAeS,EAAQc,IAAMF,UAAU,mBAC7DZ,EAAQsB,eCEN4D,EA5BwB,WACnC,IAAA/E,EAAgCC,mBAAoB,IAAGC,EAAAC,YAAAH,EAAA,GAAhD2C,EAAQzC,EAAA,GAAEoE,EAAWpE,EAAA,GAMhC,OAJI8E,qBAAU,WACNrD,EAAesD,cAAc9C,MAAK,SAAAQ,GAAQ,OAAI2B,EAAY3B,QAC3D,IAGHpC,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIC,UAAU,UAAS,cACvBF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,OACfF,IAAAC,cAAC0D,EAAa,MACbvB,EAASrB,KAAI,SAAAzB,GAAO,OACnBU,IAAAC,cAACb,EAAW,CAAC4B,IAAK1B,EAAQc,GAAId,QAASA,QAGzCU,IAAAC,cAACqE,IAAI,CAACpE,UAAU,gEAChBM,MAAO,CAACmE,SAAU,QAASC,OAAQ,OAAQC,MAAO,QAClDN,GAAG,iBAEHvE,IAAAC,cAAA,KAAGC,UAAU,kBAAiB,WCRvB4E,EAlBmB,WAEhC,OACE9E,IAAAC,cAAA,OAAKC,UAAU,gCACbF,IAAAC,cAAA,OAAKC,UAAU,8BACbF,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,OAAKC,UAAU,YAEjBF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,YACXF,IAAAC,cAAA,OAAKC,UAAU,wBACnBF,IAAAC,cAAA,OAAKC,UAAU,eC6DV6E,EA/DwD,SAAH1F,GAAmB,IAAb2F,EAAK3F,EAAL2F,MAExEvF,EAA8BC,mBAAuB,MAAKC,EAAAC,YAAAH,EAAA,GAAnDH,EAAOK,EAAA,GAAEsF,EAAUtF,EAAA,GAM1B,OAJA8E,qBAAU,WACRrD,EAAe8D,YAAYF,EAAMG,OAAO/E,IAAIwB,MAAK,SAAAtC,GAAO,OAAI2F,EAAW3F,QACtE,CAAC0F,EAAMG,OAAO/E,KAGfJ,IAAAC,cAAA,WACIX,EACAU,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,MAAIC,UAAU,iBAAkBZ,EAAQsB,MACxCZ,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,OAAKQ,IAAKnB,EAAQoB,QAASC,IAAKrB,EAAQsB,KAAMJ,MAAO,CAAC4E,MAAO,QAASC,OAAQ,YAC9ErF,IAAAC,cAACqE,IAAI,CAACC,GAAE,kBAAA1F,OAAoBS,EAAQc,IAAMF,UAAU,qDAAoDF,IAAAC,cAAA,KAAGC,UAAU,kBAAiB,UAExIF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,SAAOC,UAAU,oBACfF,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,OACJD,IAAAC,cAAA,UAAID,IAAAC,cAAA,cAAUX,EAAQsB,QAExBZ,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,UAAID,IAAAC,cAAA,cAAUX,EAAQ4B,MAExBlB,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,gBACJD,IAAAC,cAAA,UAAID,IAAAC,cAAA,cAAUX,EAAQ6B,MAExBnB,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UACGX,EAAQwB,MAAMC,KAAI,SAAA7B,GAAI,OACtBc,IAAAC,cAAA,QAAMe,IAAK9B,EAAMgB,UAAWjB,EAAWC,IAAQA,QAGpDc,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,UAAK1B,EAAWe,EAAQuB,cAKhCb,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAACqE,IAAI,CAACC,GAAG,KAAI,eAOvBvE,IAAAC,cAAA,MAAIC,UAAU,UAASF,IAAAC,cAAC6E,EAAM,S,eC2LvBQ,EAtO+B,SAAHjG,GAA+B,IAA1BC,EAAOD,EAAPC,QAASiG,EAAUlG,EAAVkG,WAEjDzF,EAAUC,cAEhBN,EAAwBC,mBAAe,CACrCgB,QAAS,CAAEa,MAAOjC,EAAQoB,SAC1BE,KAAM,CAAEW,MAAOjC,EAAQsB,KAAM4E,SAAS,GACtCtE,GAAI,CAAEK,MAAOjC,EAAQ4B,GAAIsE,SAAS,GAClCrE,GAAI,CAAEI,MAAOjC,EAAQ6B,GAAIqE,SAAS,GAClC1E,MAAO,CAAES,MAAOjC,EAAQwB,MAAO0E,SAAS,KACxC7F,EAAAC,YAAAH,EAAA,GANKgG,EAAI9F,EAAA,GAAE+F,EAAO/F,EAAA,GAadgG,EAAU,SAACzG,GACf,OAAOuG,EAAK3E,MAAMS,MAAM+B,SAASpE,IAoB7BmF,EAAoB,SAACH,GACzB,IAAM0B,EAAoB1B,EAAEC,OAAOvD,KAC7BiF,EAAqB3B,EAAEC,OAAO5C,MAC9BuE,EAAeC,YAAA,GAAMH,EAAY,CAAErE,MAAOsE,IAEhDH,EAAOM,wBAAC,GAAKP,GAASK,KAwDlBG,EAAe,SAAC/G,GAGpB,OAAgC,IAA5BuG,EAAK3E,MAAMS,MAAM7C,SAAgBiH,EAAQzG,OAMzCuG,EAAK3E,MAAMS,MAAM7C,QAAU,IAAMiH,EAAQzG,KASzCgH,EAAe,SAAChC,GACpBA,EAAEiC,iBAxEiB,WACnB,IAAIC,EAAgBX,EAGpB,GAAGY,IAAa,CAKd,GAAIZ,EAAK/E,QAAQa,MAAM+E,WAHT,+DAG+Bb,EAAK/E,QAAQa,MAAMgF,SAFpD,QAML,CACL,IAAMT,EAAkB,CAAEvE,MAAOkE,EAAK/E,QAAQa,MAAOS,MAAO,GAAIwD,SAAS,GACzEY,EAAOJ,wBAAA,GAAQI,GAAY,CAAE1F,QAASoF,QANuC,CAC7E,IACMA,EAAkB,CAAEvE,MAAOkE,EAAK/E,QAAQa,MAAOS,MAD5B,0BAC6CwD,SAAS,GAC/EY,EAAOJ,wBAAA,GAAQI,GAAY,CAAE1F,QAASoF,KAQ1C,GAAI,gCAAuBU,KAAKf,EAAK7E,KAAKW,OAInC,CACL,IAAMuE,EAAkB,CAAEvE,MAAOkE,EAAK7E,KAAKW,MAAOS,MAAO,GAAIwD,SAAS,GACtEY,EAAOJ,wBAAA,GAAQI,GAAY,CAAExF,KAAMkF,QANa,CAChD,IACMA,EAAkB,CAAEvE,MAAOkE,EAAK7E,KAAKW,MAAOS,MADzB,0CAC0CwD,SAAS,GAC5EY,EAAOJ,wBAAA,GAAQI,GAAY,CAAExF,KAAMkF,IAOrC,GAAI,eAAeU,KAAKf,EAAKvE,GAAGK,OAIzB,CACL,IAAMuE,EAAkB,CAAEvE,MAAOkE,EAAKvE,GAAGK,MAAOS,MAAO,GAAIwD,SAAS,GACpEY,EAAOJ,wBAAA,GAAQI,GAAY,CAAElF,GAAI4E,QANK,CACtC,IACMA,EAAkB,CAACvE,MAAOkE,EAAKvE,GAAGK,MAAOS,MADtB,+DACuCwD,SAAS,GACzEY,EAAOJ,wBAAA,GAAQI,GAAY,CAAElF,GAAI4E,IAOnC,GAAI,eAAeU,KAAKf,EAAKtE,GAAGI,OAIzB,CACL,IAAMuE,EAAkB,CAAEvE,MAAOkE,EAAKtE,GAAGI,MAAOS,MAAO,GAAIwD,SAAS,GACpEY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEjF,GAAI2E,QANK,CACtC,IACMA,EAAkB,CAACvE,MAAOkE,EAAKtE,GAAGI,MAAOS,MADtB,4DACuCwD,SAAS,GACzEY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEjF,GAAI2E,IAOnC,OADAJ,EAAQU,GACDA,EAAQxF,KAAK4E,SAAWY,EAAQlF,GAAGsE,SAAWY,EAAQjF,GAAGqE,QAuB5CiB,KAElBnH,EAAQoB,QAAU+E,EAAK/E,QAAQa,MAC/BjC,EAAQsB,KAAO6E,EAAK7E,KAAKW,MACzBjC,EAAQ4B,GAAKuE,EAAKvE,GAAGK,MACrBjC,EAAQ6B,GAAKsE,EAAKtE,GAAGI,MACrBjC,EAAQwB,MAAQ2E,EAAK3E,MAAMS,MAC3BgE,EAAamB,IAAkBC,MAQ7BN,EAAY,WAChB,OAAQd,GAGJoB,EAAa,WACjBvF,EAAeuF,WAAWrH,GAASsC,MAAK,kBAAM9B,EAAQO,KAAK,iBAGvDqG,EAAgB,WACpBtF,EAAesF,cAAcpH,GAASsC,MAAK,kBAAM9B,EAAQO,KAAK,aAADxB,OAAcS,EAAQc,SAGrF,OACEJ,IAAAC,cAAA,QAAM2G,SAAU,SAAC1C,GAAC,OAAKgC,EAAahC,KAClClE,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,OAAKC,UAAU,kBACZqF,GACDvF,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,OAAKQ,IAAKnB,EAAQoB,QAASC,IAAKrB,EAAQsB,KAAMJ,MAAO,CAAC4E,MAAO,QAASC,OAAQ,YAC9ErF,IAAAC,cAAA,QAAMC,UAAU,qDACdF,IAAAC,cAAA,KAAGE,QAzBK,WACpBiB,EAAeyF,cAAcvH,GAASsC,MAAK,kBAAM9B,EAAQO,KAAK,iBAwBvBH,UAAU,kBAAiB,YAI1DF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,gBAEZmG,KACCrG,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAO6G,QAAQ,WAAU,SACzB9G,IAAAC,cAAA,SAAOG,GAAG,UAAUlB,KAAK,OAAO0B,KAAK,UAAUV,UAAU,eAAeqB,MAAOkE,EAAK/E,QAAQa,MAAO0C,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAEnIuB,EAAK/E,QAAQsB,OACZhC,IAAAC,cAAA,OAAKC,UAAU,2BAChBuF,EAAK/E,QAAQsB,QAKlBhC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAO6G,QAAQ,QAAO,OACtB9G,IAAAC,cAAA,SAAOG,GAAG,OAAOlB,KAAK,OAAO0B,KAAK,OAAOV,UAAU,eAAeqB,MAAOkE,EAAK7E,KAAKW,MAAO0C,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAE1HuB,EAAK7E,KAAKoB,OACXhC,IAAAC,cAAA,OAAKC,UAAU,2BACbuF,EAAK7E,KAAKoB,QAIdhC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAO6G,QAAQ,MAAK,gBACpB9G,IAAAC,cAAA,SAAOG,GAAG,KAAKlB,KAAK,SAAS0B,KAAK,KAAKV,UAAU,eAAeqB,MAAOkE,EAAKvE,GAAGK,MAAO0C,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAEtHuB,EAAKvE,GAAGc,OACThC,IAAAC,cAAA,OAAKC,UAAU,2BACbuF,EAAKvE,GAAGc,QAIZhC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAO6G,QAAQ,MAAK,gBACpB9G,IAAAC,cAAA,SAAOG,GAAG,KAAKlB,KAAK,SAAS0B,KAAK,KAAKV,UAAU,eAAeqB,MAAOkE,EAAKtE,GAAGI,MAAO0C,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAEtHuB,EAAKtE,GAAGa,OACThC,IAAAC,cAAA,OAAKC,UAAU,2BACbuF,EAAKtE,GAAGa,QAIZhC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,aAAO,SAjMC,CACtB,SAAU,MAAO,MAAO,UAAW,SAAU,WAC7C,SAAU,YAAQ,MAAO,SAAU,OAgMdc,KAAI,SAAA7B,GAAI,OACbc,IAAAC,cAAA,OAAKe,IAAK9B,EAAMsB,MAAO,CAACuG,aAAc,SACpC/G,IAAAC,cAAA,aACED,IAAAC,cAAA,SAAOG,GAAIlB,EAAMA,KAAK,WAAW0B,KAAK,QAAQV,UAAU,YAAYqB,MAAOrC,EAAM8H,QAASrB,EAAQzG,GAAO+H,UAAWhB,EAAa/G,GAAO+E,SAAU,SAAAC,GAAC,OA5LtJ,SAAChF,EAAcgF,GAChC,IACI4B,EADY5B,EAAEC,OAAO6C,QAMvBlB,EAAW,CAAEvE,MADckE,EAAK3E,MAAMS,MAAM1C,OAAO,CAACK,KAKpD4G,EAAW,CAAEvE,MADckE,EAAK3E,MAAMS,MAAM2B,QAAO,SAACgE,GAAmB,OAAKA,IAAgBhI,MAI9FwG,EAAOM,wBAAC,GAAIP,GAAS,CAAE3E,MAAOgF,KA8K6IqB,CAAWjI,EAAMgF,MACxKlE,IAAAC,cAAA,YACED,IAAAC,cAAA,KAAGC,UAAWjB,EAAWC,IAASA,WAO9Cc,IAAAC,cAAA,OAAKC,UAAU,sBAEbF,IAAAC,cAAA,UAAQf,KAAK,SAASgB,UAAU,OAAM,kBCtNvCkH,EAtBqD,SAAH/H,GAAmB,IAAb2F,EAAK3F,EAAL2F,MAErEvF,EAA8BC,mBAAuB,MAAKC,EAAAC,YAAAH,EAAA,GAAnDH,EAAOK,EAAA,GAAEsF,EAAUtF,EAAA,GAM1B,OAJA8E,qBAAU,WACRrD,EAAe8D,YAAYF,EAAMG,OAAO/E,IAAIwB,MAAK,SAAAtC,GAAO,OAAI2F,EAAW3F,QACtE,CAAC0F,EAAMG,OAAO/E,KAGfJ,IAAAC,cAAA,WACIX,EACAU,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,MAAIC,UAAU,iBAAgB,aAASZ,EAAQsB,MAC/CZ,IAAAC,cAACqF,EAAW,CAAChG,QAASA,EAASiG,YAAY,KAG/CvF,IAAAC,cAAA,MAAIC,UAAU,UAASF,IAAAC,cAAC6E,EAAM,SCTvBuC,EAbyB,WAEtC,OACErH,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,OAAKQ,IAAI,iEAAiEE,IAAI,wBAC9EX,IAAAC,cAAA,UAAI,kCACJD,IAAAC,cAACqE,IAAI,CAACC,GAAG,IAAIrE,UAAU,oCAAmC,8BCT3CoH,EAAOhG,aAWxB,SAAAgG,EACClH,GAOE,IANFc,EAAUzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACb0C,EAAU1C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACbmC,EAAYnC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MACfiC,EAAejC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,oEAClBqC,EAAoBrC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,UACxBoC,EAAapC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAAIG,KAAMyC,YAAA,KAAAiG,GAjB3B,KACAlH,QAAE,OACFc,QAAE,OACFC,QAAE,OACFP,UAAI,OACJF,aAAO,OACPI,WAAK,OACLD,aAAO,EAaNY,KAAKrB,GAAKA,EACVqB,KAAKP,GAAKA,EACVO,KAAKN,GAAKA,EACVM,KAAKb,KAAOA,EACZa,KAAKf,QAAUA,EACfe,KAAKX,MAAQA,EACbW,KAAKZ,QAAUA,KCXL0G,EAZuB,WAClC,IAAA9H,EAAaC,oBAAiB,IAAId,MAAO4I,WAAlCpH,EAA4CR,YAAAH,EAAA,GAA1C,GACToE,EAAkBnE,mBAAkB,IAAI4H,EAAQlH,IAAzCd,EAA6CM,YAAAiE,EAAA,GAAtC,GAEd,OACI7D,IAAAC,cAAA,OAAKC,UAAU,OACXF,IAAAC,cAAA,MAAIC,UAAU,iBAAgB,yBAC9BF,IAAAC,cAACqF,EAAW,CAAChG,QAASA,EAASiG,YAAY,MCXlCkC,EAAqB,oBAAAA,IAAApG,YAAA,KAAAoG,GAarC,OAbqCnG,YAAAmG,EAAA,OAAAzG,IAAA,QAAAO,MAGtC,SAAamG,EAAkBC,GAAqC,IAADnG,EAAA,KACzDoG,EAAgC,YAAbF,GAAuC,YAAbC,EAEnD,OAAO,IAAIzF,SAAS,SAAAC,GAChB0F,YAAW,WACPrG,EAAKoG,gBAAkBA,EACvBzF,EAAQyF,KACT,YAGVH,EAbqC,GAArBA,EACVG,iBAA2B,ECctC,IA8GeE,EA9GkB,WAE/B,IAAMhI,EAAUC,cAEhBN,EAAwBC,mBAAe,CACrCgI,SAAU,CAAEnG,MAAO,IACnBoG,SAAU,CAAEpG,MAAO,MACnB5B,EAAAC,YAAAH,EAAA,GAHKgG,EAAI9F,EAAA,GAAE+F,EAAO/F,EAAA,GAKpBkE,EAA8BnE,mBAAiB,sDAA4CoE,EAAAlE,YAAAiE,EAAA,GAApFkE,EAAOjE,EAAA,GAAEkE,EAAUlE,EAAA,GAEpBO,EAAoB,SAACH,GACzB,IAAM0B,EAAoB1B,EAAEC,OAAOvD,KAC7BiF,EAAqB3B,EAAEC,OAAO5C,MAC9BuE,EAAeC,YAAA,GAAMH,EAAY,CAAErE,MAAOsE,IAEhDH,EAAOM,wBAAC,GAAKP,GAASK,KA+BlBI,EAAe,SAAChC,GACpBA,EAAEiC,iBA7BiB,WACnB,IAAIC,EAAgBX,EAGpB,GAAGA,EAAKiC,SAASnG,MAAM7C,OAAS,EAAG,CACjC,IACMoH,EAAkB,CAAEvE,MAAOkE,EAAKiC,SAASnG,MAAOS,MAD7B,+DAC8CwD,SAAS,GAChFY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEsB,SAAU5B,QAClC,CACL,IAAMA,EAAkB,CAAEvE,MAAOkE,EAAKiC,SAASnG,MAAOS,MAAO,GAAIwD,SAAS,GAC1EY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEsB,SAAU5B,IAIzC,GAAGL,EAAKkC,SAASpG,MAAM7C,OAAS,EAAG,CACjC,IACMoH,EAAkB,CAACvE,MAAOkE,EAAKkC,SAASpG,MAAOS,MAD5B,kEAC6CwD,SAAS,GAC/EY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEuB,SAAU7B,QAClC,CACL,IAAMA,EAAkB,CAAEvE,MAAOkE,EAAKkC,SAASpG,MAAOS,MAAO,GAAIwD,SAAS,GAC1EY,EAAOJ,wBAAA,GAAQI,GAAY,CAAEuB,SAAU7B,IAKzC,OAFAJ,EAAQU,GAEDA,EAAQsB,SAASlC,SAAWY,EAAQuB,SAASnC,QAKhCiB,KAElBuB,EAAW,oDACXP,EAAsBQ,MAAMxC,EAAKiC,SAASnG,MAAOkE,EAAKkC,SAASpG,OAAOK,MAAK,SAAAgG,GACrEA,EAKJ9H,EAAQO,KAAK,aAJX2H,EAAW,4DAUnB,OACEhI,IAAAC,cAAA,QAAM2G,SAAU,SAAC1C,GAAC,OAAKgC,EAAahC,KAClClE,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,gBAEZ6H,GAAW/H,IAAAC,cAAA,OAAKC,UAAU,cACzBF,IAAAC,cAAA,OAAKC,UAAU,6BACZ6H,IAIL/H,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAO6G,QAAQ,YAAW,eAC1B9G,IAAAC,cAAA,SAAOG,GAAG,WAAWlB,KAAK,OAAO0B,KAAK,WAAWV,UAAU,eAAeqB,MAAOkE,EAAKiC,SAASnG,MAAO0C,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAEtIuB,EAAKiC,SAAS1F,OACfhC,IAAAC,cAAA,OAAKC,UAAU,2BACbuF,EAAKiC,SAAS1F,QAIlBhC,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SAAO6G,QAAQ,YAAW,gBAC1B9G,IAAAC,cAAA,SAAOG,GAAG,WAAWlB,KAAK,WAAW0B,KAAK,WAAWV,UAAU,eAAeqB,MAAOkE,EAAKkC,SAASpG,MAAO0C,SAAU,SAAAC,GAAC,OAAIG,EAAkBH,MAE1IuB,EAAKkC,SAAS3F,OACfhC,IAAAC,cAAA,OAAKC,UAAU,2BACbuF,EAAKkC,SAAS3F,SAIpBhC,IAAAC,cAAA,OAAKC,UAAU,sBAEbF,IAAAC,cAAA,UAAQf,KAAK,SAASgB,UAAU,OAAM,kB,wBCpGvCgI,EAXM,SAAH7I,GAAA,IAAiB8I,EAAS9I,EAApB+I,UAAyBC,EAAIC,YAAAjJ,EAAAkJ,GAAA,OACnDvI,IAAAC,cAACuI,IAAKjF,OAAAkF,OAAA,GAAKJ,EAAI,CAAEK,OAAQ,SAACC,GAExB,OADwBlB,EAAsBG,gBAKvC5H,IAAAC,cAACkI,EAAcQ,GAHb3I,IAAAC,cAAC2I,IAAQ,CAACrE,GAAI,CAAEsE,SAAU,iBC0BxBC,EAxBgB,WAE7B,OACE9I,IAAAC,cAAC8I,IAAM,KACL/I,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAACqE,IAAI,CAACC,GAAG,IAAIrE,UAAU,qBAAoB,gBAG/CF,IAAAC,cAAC+I,IAAM,KACLhJ,IAAAC,cAACiI,EAAY,CAACe,OAAK,EAACC,KAAK,IAAId,UAAWe,IACxCnJ,IAAAC,cAACuI,IAAK,CAACS,OAAK,EAACC,KAAK,SAASd,UAAWN,IACtC9H,IAAAC,cAACiI,EAAY,CAACe,OAAK,EAACC,KAAK,YAAYd,UAAWe,IAChDnJ,IAAAC,cAACiI,EAAY,CAACe,OAAK,EAACC,KAAK,gBAAgBd,UAAWb,IACpDvH,IAAAC,cAACiI,EAAY,CAACe,OAAK,EAACC,KAAK,qBAAqBd,UAAWhB,IACzDpH,IAAAC,cAACiI,EAAY,CAACgB,KAAK,gBAAgBd,UAAWrD,IAC9C/E,IAAAC,cAACuI,IAAK,CAACJ,UAAWf,QCvB1B+B,IAASV,OACL1I,IAAAC,cAAC6I,EAAG,MACJO,SAASC,eAAe,W","file":"static/js/main.131c96b0.chunk.js","sourcesContent":["const formatDate = (date: Date = new Date()): string => {\n    return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\n}\n\nexport default formatDate;","const formatType = (type: string): string => {\n    let color: string;\n   \n    switch (type) {\n      case 'Feu': \n        color = 'red lighten-1'; \n        break; \n      case 'Eau': \n        color = 'blue lighten-1'; \n        break; \n      case 'Plante': \n        color = 'green lighten-1'; \n        break; \n      case 'Insecte': \n        color = 'brown lighten-1'; \n        break; \n      case 'Normal': \n        color = 'grey lighten-3'; \n        break; \n      case 'Vol': \n        color = 'blue lighten-3'; \n        break; \n      case 'Poison': \n        color = 'deep-purple accent-1'; \n        break; \n      case 'Fée': \n        color = 'pink lighten-4'; \n        break; \n      case 'Psy': \n        color = 'deep-purple darken-2'; \n        break; \n      case 'Electrik': \n        color = 'lime accent-1'; \n        break; \n      case 'Combat': \n        color = 'deep-orange'; \n        break; \n      default: \n        color = 'grey'; \n        break; \n    }\n   \n    return `chip ${color}`;\n}\nexport default formatType;","import React, { FunctionComponent, useState } from 'react';\nimport Pokemon from '../models/pokemon';\nimport './pokemon-card.css';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n\ntype Props = {\n  pokemon: Pokemon\n  borderColor?: string\n};\n  \nconst PokemonCard: FunctionComponent<Props> = ({pokemon, borderColor = '#009688'}) => {\n\n    const [color, setColor] = useState<string>();   \n    const history = useHistory();\n\n    const showBorder = () => {\n        setColor(borderColor);\n    }\n\n    const hideBorder = () => {\n        setColor('#f5f5f5');\n    }\n\n    const goToPokemon = (id: number) => {\n        history.push(`/pokemons/${id}`);\n    }\n\n    return (\n        <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\n        <div className=\"card horizontal\" style={{ borderColor: color }}>\n            <div className=\"card-image\"> \n            <img src={pokemon.picture} alt={pokemon.name}/>\n            </div>\n            <div className=\"card-stacked\">\n            <div className=\"card-content\">\n                <p>{pokemon.name}</p>\n                <p><small>{formatDate (pokemon.created)}</small></p>\n                {pokemon.types.map(type => (\n                    <span key={type} className={formatType (type)}>{type}</span>\n                ))}\n            </div>\n            </div>\n        </div> \n        </div>\n    );\n}\n  \nexport default PokemonCard;","import Pokemon from './pokemon';\n   \nexport const POKEMONS: Pokemon[] = [\n {\n  id: 1,\n  name: \"Bulbizarre\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\n  types: [\"Plante\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 2,\n  name: \"Salamèche\",\n  hp: 28,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\n  types: [\"Feu\"],\n  created: new Date()\n },\n {\n  id: 3,\n  name: \"Carapuce\",\n  hp: 21,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\n  types: [\"Eau\"],\n  created: new Date()\n },\n {\n  id: 4,\n  name: \"Aspicot\",\n  hp: 16,\n  cp: 2,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\n  types: [\"Insecte\", \"Poison\"],\n  created: new Date()\n },\n {\n  id: 5,\n  name: \"Roucool\",\n  hp: 30,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 6,\n  name: \"Rattata\",\n  hp: 18,\n  cp: 6,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 7,\n  name: \"Piafabec\",\n  hp: 14,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\n  types: [\"Normal\", \"Vol\"],\n  created: new Date()\n },\n {\n  id: 8,\n  name: \"Abo\",\n  hp: 16,\n  cp: 4,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\n  types: [\"Poison\"],\n  created: new Date()\n },\n {\n  id: 9,\n  name: \"Pikachu\",\n  hp: 21,\n  cp: 7,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\n  types: [\"Electrik\"],\n  created: new Date()\n },\n {\n  id: 10,\n  name: \"Sabelette\",\n  hp: 19,\n  cp: 3,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\n  types: [\"Normal\"],\n  created: new Date()\n },\n {\n  id: 11,\n  name: \"Mélofée\",\n  hp: 25,\n  cp: 5,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\n  types: [\"Fée\"],\n  created: new Date()\n },\n {\n  id: 12,\n  name: \"Groupix\",\n  hp: 17,\n  cp: 8,\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\n  types: [\"Feu\"],\n  created: new Date()\n }\n];\n  \nexport default POKEMONS;","import Pokemon from \"../models/pokemon\";\nimport POKEMONS from \"../models/mock-pokemon\";\n  \nexport default class PokemonService {\n  \n  static pokemons:Pokemon[] = POKEMONS;\n  \n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\n  \n  static getPokemons(): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch('http://localhost:3001/pokemons')\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      resolve(this.pokemons);\n    });\n  }\n  \n  static getPokemon(id: number): Promise<Pokemon | null> {\n    if (this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${id}`)\n        .then(response => response.json())\n        .then(data => (this.isEmpty(data) ? null : data))\n        .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      const pokemon = this.pokemons.find(pokemon => id === pokemon.id);\n      resolve(pokemon || null); // Ensure null is returned if pokemon is undefined\n    });\n  }\n    \n  static updatePokemon(pokemon: Pokemon): Promise<Pokemon> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'PUT',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {\n      const { id } = pokemon;\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\n      this.pokemons[index] = pokemon;\n      resolve(pokemon);\n    }); \n  }\n  \n  static deletePokemon(pokemon: Pokemon): Promise<{}> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const { id } = pokemon;\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\n      resolve({});\n    }); \n  }\n  \n  static addPokemon(pokemon: Pokemon): Promise<Pokemon> {\n    pokemon.created = new Date(pokemon.created);\n  \n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons`, {\n        method: 'POST',\n        body: JSON.stringify(pokemon),\n        headers: { 'Content-Type': 'application/json'}\n      })\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      this.pokemons.push(pokemon);\n      resolve(pokemon);\n    }); \n  }\n  \n  static searchPokemon(term: string): Promise<Pokemon[]> {\n    if(this.isDev) {\n      return fetch(`http://localhost:3001/pokemons?q=${term}`)\n      .then(response => response.json())\n      .catch(error => this.handleError(error));\n    }\n  \n    return new Promise(resolve => {    \n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\n      resolve(results);\n    });\n  \n  }\n  \n  static isEmpty(data: Object): boolean {\n    return Object.keys(data).length === 0;\n  }\n  \n  static handleError(error: Error): void {\n    console.error(error);\n  }\n}","import React, { FunctionComponent, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\n \nconst PokemonSearch: FunctionComponent = () => {\n  \n  const [term, setTerm] = useState<string>('');\n  const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n \n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const term = e.target.value;\n    setTerm(term);\n \n    if(term.length <= 1) {\n      setPokemons([]);\n      return;\n    }\n \n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\n  }\n  \n  return (\n    <div className=\"row\"> \n    <div className=\"col s12 m6 offset-m3\"> \n      <div className=\"card\"> \n      <div className=\"card-content\"> \n        <div className=\"input-field\"> \n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} /> \n        </div> \n        <div className='collection'>\n        {pokemons.map((pokemon) => (\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\n            {pokemon.name}\n          </Link>\n        ))}\n        </div> \n      </div> \n      </div> \n    </div> \n    </div>\n  );\n}\n  \nexport default PokemonSearch;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport Pokemon from '../models/pokemon';\nimport PokemonCard from '../components/pokemon-card';\nimport PokemonService from '../services/pokemon-service';\nimport { Link } from 'react-router-dom';\nimport PokemonSearch from '../components/pokemon-search';\n  \nconst PokemonList: FunctionComponent = () => {\n    const [pokemons, setPokemons] = useState<Pokemon[]>([]);\n    \n    useEffect(() => {\n        PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\n    }, []);\n\nreturn (\n    <div>\n      <h1 className=\"center\">Pokédex</h1>\n      <div className=\"container\"> \n        <div className=\"row\"> \n        <PokemonSearch />\n        {pokemons.map(pokemon => (\n          <PokemonCard key={pokemon.id} pokemon={pokemon}/>\n        ))}\n        </div>\n        <Link className='btn-floating btn-large waves-effect waves-light red z-depth-3'\n        style={{position: 'fixed', bottom: '25px', right: '25px'}} \n        to='/pokemons/add'\n        >\n        <i className='material-icons'>add</i>\n        </Link>\n      </div>\n    </div> \n  );\n}\n  \nexport default PokemonList;","import React, { FunctionComponent } from 'react';\n  \nconst Loader: FunctionComponent = () => {\n   \n  return (\n    <div className=\"preloader-wrapper big active\"> \n      <div className=\"spinner-layer spinner-blue\"> \n        <div className=\"circle-clipper left\"> \n          <div className=\"circle\"></div> \n        </div>\n        <div className=\"gap-patch\"> \n          <div className=\"circle\"></div> \n        </div><div className=\"circle-clipper right\"> \n          <div className=\"circle\"></div> \n        </div>\n      </div> \n   </div> \n  );\n}\n   \nexport default Loader;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps, Link } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatDate from '../helpers/format-date';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n\n  \ntype Params = { id: string };\n  \nconst PokemonsDetail: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n          <div className=\"col s12 m8 offset-m2\"> \n            <h2 className=\"header center\">{ pokemon.name }</h2>\n            <div className=\"card hoverable\"> \n              <div className=\"card-image\">\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/> \n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn-floating halfway-fab waves-effect waves-light\"><i className=\"material-icons\">edit</i></Link>\n              </div>\n              <div className=\"card-stacked\">\n                <div className=\"card-content\">\n                  <table className=\"bordered striped\">\n                    <tbody>\n                      <tr> \n                        <td>Nom</td> \n                        <td><strong>{ pokemon.name }</strong></td> \n                      </tr>\n                      <tr> \n                        <td>Points de vie</td> \n                        <td><strong>{ pokemon.hp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Dégâts</td> \n                        <td><strong>{ pokemon.cp }</strong></td> \n                      </tr> \n                      <tr> \n                        <td>Types</td> \n                        <td>\n                          {pokemon.types.map(type => (\n                           <span key={type} className={formatType(type)}>{type}</span>\n                          ))}</td> \n                      </tr> \n                      <tr> \n                        <td>Date de création</td> \n                        <td>{formatDate(pokemon.created)}</td> \n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"card-action\">\n                  <Link to=\"/\">Retour</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader /></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonsDetail;","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Pokemon from '../models/pokemon';\nimport formatType from '../helpers/format-type';\nimport PokemonService from '../services/pokemon-service';\n\ntype Props = {\n  pokemon: Pokemon,\n  isEditForm: boolean\n};\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  picture: Field,\n  name: Field,\n  hp: Field,\n  cp: Field,\n  types: Field\n}\n\nconst PokemonForm: FunctionComponent<Props> = ({pokemon, isEditForm}) => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    picture: { value: pokemon.picture },\n    name: { value: pokemon.name, isValid: true },\n    hp: { value: pokemon.hp, isValid: true },\n    cp: { value: pokemon.cp, isValid: true },\n    types: { value: pokemon.types, isValid: true }\n  });\n\n  const types: string[] = [\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\n  ];\n\n  const hasType = (type: string): boolean => {\n    return form.types.value.includes(type);\n  }\n\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\n    const checked = e.target.checked;\n    let newField: Field;\n\n    if(checked) {\n      // Si l'utilisateur coche un type, à l'ajoute à la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.concat([type]);\n      newField = { value: newTypes };\n    } else {\n      // Si l'utilisateur décoche un type, on le retire de la liste des types du pokémon.\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\n      newField = { value: newTypes };\n    }\n\n    setForm({...form, ...{ types: newField }});\n  }\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator url\n    if(isAddForm()) {\n\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\";\n      const end = \".png\";\n\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\n        const errorMsg: string = 'L\\'url n\\'est pas valide.';\n        const newField: Field = { value: form.picture.value, error: errorMsg, isValid: false };\n        newForm = { ...newForm, ...{ picture: newField } };\n      } else {\n        const newField: Field = { value: form.picture.value, error: '', isValid: true };\n        newForm = { ...newForm, ...{ picture: newField } };\n      }\n    }\n\n    // Validator name\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\n      const errorMsg: string = 'Le nom du pokémon est requis (1-25).';\n      const newField: Field = { value: form.name.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ name: newField } };\n    } else {\n      const newField: Field = { value: form.name.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ name: newField } };\n    }\n\n    // Validator hp\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\n      const errorMsg: string = 'Les points de vie du pokémon sont compris entre 0 et 999.';\n      const newField: Field = {value: form.hp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ hp: newField } };\n    } else {\n      const newField: Field = { value: form.hp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ hp: newField } };\n    }\n\n    // Validator cp\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\n      const errorMsg: string = 'Les dégâts du pokémon sont compris entre 0 et 99';\n      const newField: Field = {value: form.cp.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ cp: newField } };\n    } else {\n      const newField: Field = { value: form.cp.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ cp: newField } };\n    }\n\n    setForm(newForm);\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\n  }\n\n  const isTypesValid = (type: string): boolean => {\n    // Cas n°1: Le pokémon a un seul type, qui correspond au type passé en paramètre.\n    // Dans ce cas on revoie false, car l'utilisateur ne doit pas pouvoir décoché ce type (sinon le pokémon aurait 0 type, ce qui est interdit)\n    if (form.types.value.length === 1 && hasType(type)) {\n      return false;\n    }\n    \n    // Cas n°1: Le pokémon a au moins 3 types.\n    // Dans ce cas il faut empêcher à l'utilisateur de cocher un nouveau type, mais pas de décocher les types existants.\n    if (form.types.value.length >= 3 && !hasType(type)) { \n      return false; \n    } \n    \n    // Après avoir passé les deux tests ci-dessus, on renvoie 'true', \n    // c'est-à-dire que l'on autorise l'utilisateur à cocher ou décocher un nouveau type.\n    return true;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      pokemon.picture = form.picture.value;\n      pokemon.name = form.name.value;\n      pokemon.hp = form.hp.value;\n      pokemon.cp = form.cp.value;\n      pokemon.types = form.types.value;\n      isEditForm ? updatePokemon() : addPokemon();\n    }\n  }\n\n  const deletePokemon = () => {\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n\n  const isAddForm = (): boolean => {\n    return !isEditForm;\n  }\n\n  const addPokemon = () => {\n    PokemonService.addPokemon(pokemon).then(() => history.push(`/pokemons`));\n  }\n\n  const updatePokemon = () => {\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`));\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\"> \n            {isEditForm && (\n            <div className=\"card-image\">\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\n              <span className=\"btn-floating halfway-fab waves-effect waves-light\">\n                <i onClick={deletePokemon} className=\"material-icons\">delete</i>\n              </span>\n            </div>\n            )}\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Pokemon picture */}\n                {isAddForm() && (\n                  <div className=\"form-group\">\n                    <label htmlFor=\"picture\">Image</label>\n                    <input id=\"picture\" type=\"text\" name=\"picture\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\n                    {/* error */}\n                    {form.picture.error &&\n                      <div className=\"card-panel red accent-1\"> \n                    {form.picture.error} \n                  </div>} \n                </div>\n                )}\n                {/* Pokemon name */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">Nom</label>\n                  <input id=\"name\" type=\"text\" name=\"name\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.name.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.name.error} \n                  </div>} \n                </div>\n                {/* Pokemon hp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"hp\">Point de vie</label>\n                  <input id=\"hp\" type=\"number\" name=\"hp\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.hp.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.hp.error}\n                  </div>} \n                </div>\n                {/* Pokemon cp */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"cp\">Dégâts</label>\n                  <input id=\"cp\" type=\"number\" name=\"cp\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.cp.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.cp.error}\n                  </div>} \n                </div>\n                {/* Pokemon types */}\n                <div className=\"form-group\">\n                  <label>Types</label>\n                  {types.map(type => (\n                    <div key={type} style={{marginBottom: '10px'}}>\n                      <label>\n                        <input id={type} type=\"checkbox\" name=\"types\" className=\"filled-in\" value={type} checked={hasType(type)} disabled={!isTypesValid(type)} onChange={e => selectType(type, e)}></input>\n                        <span>\n                          <p className={formatType(type)}>{ type }</p>\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default PokemonForm;\n","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport PokemonForm from '../components/pokemon-form';\nimport Pokemon from '../models/pokemon';\nimport PokemonService from '../services/pokemon-service';\nimport Loader from '../components/loader';\n\ntype Params = { id: string };\n  \nconst PokemonEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\n    \n  const [pokemon, setPokemon] = useState<Pokemon|null>(null);\n  \n  useEffect(() => {\n    PokemonService.getPokemon(+match.params.id).then(pokemon => setPokemon(pokemon));\n  }, [match.params.id]);\n    \n  return (\n    <div>\n      { pokemon ? (\n        <div className=\"row\">\n            <h2 className=\"header center\">Éditer { pokemon.name }</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\n        </div>\n      ) : (\n        <h4 className=\"center\"><Loader /></h4>\n      )}\n    </div>\n  );\n}\n  \nexport default PokemonEdit;","import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\n  \nconst PageNotFound: FunctionComponent = () => {\n  \n  return (\n    <div className=\"center\">\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\n      <h1>Hey, cette page n'existe pas !</h1> \n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\n        Retourner à l'accueil\n      </Link>\n    </div>\n  );\n}\n  \nexport default PageNotFound;","export default class Pokemon {\n    // 1. Typage des propiétés d'un pokémon.\n    id: number;\n    hp: number;\n    cp: number;\n    name: string;\n    picture: string;\n    types: Array<string>;\n    created: Date;\n     \n    // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\n    constructor(\n     id: number,\n     hp: number = 100,\n     cp: number = 10,\n     name: string = '...',\n     picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/XXX.png',\n     types: Array<string> = ['Normal'],\n     created: Date = new Date()\n    ) {\n     // 3. Initialisation des propiétés d'un pokémons.\n     this.id = id;\n     this.hp = hp;\n     this.cp = cp;\n     this.name = name;\n     this.picture = picture;\n     this.types = types;\n     this.created = created;\n    }\n   }","import React, { FunctionComponent, useState } from \"react\";\nimport PokemonForm from \"../components/pokemon-form\";\nimport Pokemon from \"../models/pokemon\";\n\nconst PokemonAdd: FunctionComponent = () => {\n    const [id] = useState<number>(new Date().getTime());\n    const [pokemon] = useState<Pokemon>(new Pokemon(id));\n\n    return (\n        <div className=\"row\">\n            <h2 className=\"header center\">Ajouter un pokémon</h2>\n            <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\n        </div>\n    );\n}\n\nexport default PokemonAdd;","export default class AuthenticationService {\n    static isAuthenticated: boolean = false;\n\n    static login(username: string, password: string): Promise<boolean> {\n        const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\n\n        return new Promise((resolve => {\n            setTimeout(() => {\n                this.isAuthenticated = isAuthenticated;\n                resolve(isAuthenticated);\n            }, 1000);\n        }\n        ));\n    }\n}\n\n","import React, { FunctionComponent, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthenticationService from '../services/authentication-service';\n\ntype Field = {\n  value?: any,\n  error?: string,\n  isValid?: boolean\n};\n\ntype Form = {\n  username: Field,\n  password: Field\n}\n\nconst Login: FunctionComponent = () => {\n\n  const history = useHistory();\n\n  const [form, setForm] = useState<Form>({\n    username: { value: '' },\n    password: { value: '' },\n  });\n\n  const [message, setMessage] = useState<string>('Vous êtes déconnecté. (pikachu / pikachu)');\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const fieldName: string = e.target.name;\n    const fieldValue: string = e.target.value;\n    const newField: Field = { [fieldName]: { value: fieldValue } };\n\n    setForm({ ...form, ...newField});\n  }\n\n  const validateForm = () => {\n    let newForm: Form = form;\n\n    // Validator username\n    if(form.username.value.length < 3) {\n      const errorMsg: string = 'Votre prénom doit faire au moins 3 caractères de long.';\n      const newField: Field = { value: form.username.value, error: errorMsg, isValid: false };\n      newForm = { ...newForm, ...{ username: newField } };\n    } else {\n      const newField: Field = { value: form.username.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ username: newField } };\n    }\n\n    // Validator password\n    if(form.password.value.length < 6) {\n      const errorMsg: string = 'Votre mot de passe doit faire au moins 6 caractères de long.';\n      const newField: Field = {value: form.password.value, error: errorMsg, isValid: false};\n      newForm = { ...newForm, ...{ password: newField } };\n    } else {\n      const newField: Field = { value: form.password.value, error: '', isValid: true };\n      newForm = { ...newForm, ...{ password: newField } };\n    }\n\n    setForm(newForm);\n\n    return newForm.username.isValid && newForm.password.isValid;\n  }\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormValid = validateForm();\n    if(isFormValid) {\n      setMessage('👉 Tentative de connexion en cours ...');\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\n        if(!isAuthenticated) {\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\n          return;\n        }\n        \n        history.push('/pokemons');\n        \n      });\n    }\n  }\n\n  return (\n    <form onSubmit={(e) => handleSubmit(e)}>\n      <div className=\"row\">\n        <div className=\"col s12 m8 offset-m2\">\n          <div className=\"card hoverable\">\n            <div className=\"card-stacked\">\n              <div className=\"card-content\">\n                {/* Form message */}\n                {message && <div className=\"form-group\">\n                  <div className=\"card-panel grey lighten-5\">\n                    {message}\n                  </div>\n                </div>}\n                {/* Field username */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Identifiant</label>\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.username.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.username.error} \n                  </div>} \n                </div>\n                {/* Field password */}\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Mot de passe</label>\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\n                  {/* error */}\n                  {form.password.error &&\n                  <div className=\"card-panel red accent-1\"> \n                   {form.password.error} \n                  </div>} \n                </div>\n              </div>\n              <div className=\"card-action center\">\n                {/* Submit button */}\n                <button type=\"submit\" className=\"btn\">Valider</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n \nexport default Login;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './services/authentication-service';\n  \nconst PrivateRoute = ({ component: Component, ...rest }: any) => (\n  <Route {...rest} render={(props) => {\n    const isAuthenticated = AuthenticationService.isAuthenticated;\n    if (!isAuthenticated) {    \n      return <Redirect to={{ pathname: '/login' }} />\n    }\n  \n    return <Component {...props} />\n  }} />\n);\n  \nexport default PrivateRoute;","import React, { FunctionComponent } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PokemonsList from './pages/pokemon-list';\nimport PokemonsDetail from './pages/pokemon-detail';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonAdd from './pages/pokemon-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\n \nconst App: FunctionComponent = () => {\n \n  return (\n    <Router>\n      <div>\n      <nav> \n        <div className=\"nav-wrapper teal\">\n          <Link to=\"/\" className=\"brand-logo center\">Pokédex</Link>\n        </div> \n      </nav>\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={PokemonsList} />\n        <Route exact path=\"/login\" component={Login} />\n        <PrivateRoute exact path=\"/pokemons\" component={PokemonsList} />\n        <PrivateRoute exact path=\"/pokemons/add\" component={PokemonAdd} />\n        <PrivateRoute exact path=\"/pokemons/edit/:id\" component={PokemonEdit} />\n        <PrivateRoute path=\"/pokemons/:id\" component={PokemonsDetail} />\n        <Route component={PageNotFound} />\n      </Switch>\n      </div>\n    </Router>\n  );\n}\n \nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />, \n    document.getElementById(\"root\")\n);"],"sourceRoot":""}